name: GitHub Actions Demo
on: [push]
jobs:
  Deno-Runtime-Build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable  
      - name: Download and compile Deno
        run: |
          curl -fsSL https://github.com/denoland/deno/releases/download/v1.19.1/deno_src.tar.gz --output deno.tar.gz 
          tar -zxf deno.tar.gz
          cd deno/cli
          cargo install --locked --root .. --path .
          cd ../../
          mkdir -p ${{ github.workspace }}/src/bin
          cp -r deno/bin/deno ${{ github.workspace }}/src/bin/deno
          chmod +x ${{ github.workspace }}/src/bin/deno
          cp -r ${{ github.workspace }}/src dist
          cd dist
          zip -r ../deno-1.19.1-x86.zip .
          cd ..
          ls .
      - name: Upload to S3
        run: |
          aws s3 cp deno-1.19.1-x86.zip s3://begin-deno-runtime/deno-1.19.1-x86.zip
      - name: Distribute to regions
        run: |
          AWS_REGION=ca-central-1 aws lambda publish-layer-version --layer-name DenoRuntime --content S3Bucket=begin-deno-runtime,S3Key=deno-1.19.1-x86.zip --license-info "Apache-2.0"
          AWS_REGION=ca-central-1 aws lambda add-layer-version-permission --layer-name DenoRuntime --statement-id allow-every1 --version-number 39 --principal '*' --action lambda:GetLayerVersion
