name: Deno Runtime Lambda Layer
on: [push]
env:
  version: "1.18.0"
jobs:
  Deno-Runtime-Build:
    runs-on: ubuntu-latest
    container: docker://lambci/lambda:build-provided.al2
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable  

      - name: Compile Deno
        run: |
          git clone -b v${{ env.version }} --recurse-submodules https://github.com/denoland/deno.git
          cd deno
          cargo build --release
 
      - name: Build the Lambda Layer
        run: |
          mkdir -p src/bin
          cp deno/target/release/deno src/bin/deno
          cd src
          zip -r ../deno-${{ env.version }}-x86.zip .

      - name: Upload to S3
        run: |
          aws s3 cp deno-${{ env.version }}-x86.zip s3://begin-deno-runtime/deno-${{ env.version }}-x86.zip

      - name: Publish ca-central-1
        run: |
          v="$(aws lambda publish-layer-version --description ${{ env.version }}-x86 --layer-name DenoRuntime --zip-file fileb://deno-${{ env.version }}-x86.zip --license-info "Apache-2.0" --query 'Version' --region ca-central-1)"
          aws lambda add-layer-version-permission --layer-name DenoRuntime --statement-id allow-every1 --version-number $v --principal '*' --action lambda:GetLayerVersion --region ca-central-1
