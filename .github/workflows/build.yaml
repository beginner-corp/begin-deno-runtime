name: Deno Runtime Lambda Layer

on:
  push:
    paths-ignore:
      - '**/readme.md' # ignore changes to readme so this action can update the readme!

env:
  version: "1.35.0"

jobs:
  build:
    runs-on: ubuntu-latest
    container: docker://public.ecr.aws/lambda/provided
    steps:
      - name: Install necessary packages
        run: yum install gzip tar unzip zip -y

      - name: Check out repo
        uses: actions/checkout@v3

      - name: Download Deno
        run: curl -fsSL https://deno.land/x/install/install.sh | sh -s v${{ env.version }}

      - name: Verify the build
        run: /github/home/.deno/bin/deno --version

      - name: Build the Lambda Layer
        run: |
          mkdir -p src/bin
          cp /github/home/.deno/bin/deno src/bin/deno
          cd src
          zip -r ../deno-${{ env.version }}-x86.zip .

      - name: Persist layer artifact
        uses: actions/upload-artifact@v3
        with:
          name: layer
          path: deno-${{ env.version }}-x86.zip

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      # these secrets are set up at the org level
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      # uses node for interacting w the aws-sdk and github apis
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Get layer artifact
        uses: actions/download-artifact@v3
        with:
          name: layer

      - name: Test artifact
        run: ls -lah

      # this is just backups for debugging purposes
      - name: Upload to S3
        run: |
          aws s3 cp deno-${{ env.version }}-x86.zip s3://begin-deno-runtime/deno-${{ env.version }}-x86.zip

      - name: Test node
        run: node --version

      # # iterates through regions adding layers to each
      # - name: Publish layer to all AWS regions
      #   run: |
      #     npm install
      #     node scripts/publish-layers.js

      # # update the repo readme with deno version -> arn list organized by region
      # - name: Update readme.md
      #   run: |
      #     GITHUB_TOKEN=${{ github.token }} node scripts/update-readme.js
